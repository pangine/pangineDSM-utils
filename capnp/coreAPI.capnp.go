// Code generated by capnpc-go. DO NOT EDIT.

package pangine

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// The message sent from other services to core service
type CoreAPI struct{ capnp.Struct }

// CoreAPI_TypeID is the unique identifier for the type CoreAPI.
const CoreAPI_TypeID = 0x9c17b0aea4cc35e4

func NewCoreAPI(s *capnp.Segment) (CoreAPI, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return CoreAPI{st}, err
}

func NewRootCoreAPI(s *capnp.Segment) (CoreAPI, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return CoreAPI{st}, err
}

func ReadRootCoreAPI(msg *capnp.Message) (CoreAPI, error) {
	root, err := msg.RootPtr()
	return CoreAPI{root.Struct()}, err
}

func (s CoreAPI) String() string {
	str, _ := text.Marshal(0x9c17b0aea4cc35e4, s.Struct)
	return str
}

func (s CoreAPI) Id() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s CoreAPI) SetId(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s CoreAPI) MessageType() CoreAPIType {
	return CoreAPIType(s.Struct.Uint16(8))
}

func (s CoreAPI) SetMessageType(v CoreAPIType) {
	s.Struct.SetUint16(8, uint16(v))
}

func (s CoreAPI) Offsets() (capnp.Int64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.Int64List{List: p.List()}, err
}

func (s CoreAPI) HasOffsets() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s CoreAPI) SetOffsets(v capnp.Int64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewOffsets sets the offsets field to a newly
// allocated capnp.Int64List, preferring placement in s's segment.
func (s CoreAPI) NewOffsets(n int32) (capnp.Int64List, error) {
	l, err := capnp.NewInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// CoreAPI_List is a list of CoreAPI.
type CoreAPI_List struct{ capnp.List }

// NewCoreAPI creates a new list of CoreAPI.
func NewCoreAPI_List(s *capnp.Segment, sz int32) (CoreAPI_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return CoreAPI_List{l}, err
}

func (s CoreAPI_List) At(i int) CoreAPI { return CoreAPI{s.List.Struct(i)} }

func (s CoreAPI_List) Set(i int, v CoreAPI) error { return s.List.SetStruct(i, v.Struct) }

func (s CoreAPI_List) String() string {
	str, _ := text.MarshalList(0x9c17b0aea4cc35e4, s.List)
	return str
}

// CoreAPI_Promise is a wrapper for a CoreAPI promised by a client call.
type CoreAPI_Promise struct{ *capnp.Pipeline }

func (p CoreAPI_Promise) Struct() (CoreAPI, error) {
	s, err := p.Pipeline.Struct()
	return CoreAPI{s}, err
}

// The message sent from core service replying a request or a rollback
type CoreAPIReply struct{ capnp.Struct }

// CoreAPIReply_TypeID is the unique identifier for the type CoreAPIReply.
const CoreAPIReply_TypeID = 0x96feac6656bc08ad

func NewCoreAPIReply(s *capnp.Segment) (CoreAPIReply, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return CoreAPIReply{st}, err
}

func NewRootCoreAPIReply(s *capnp.Segment) (CoreAPIReply, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1})
	return CoreAPIReply{st}, err
}

func ReadRootCoreAPIReply(msg *capnp.Message) (CoreAPIReply, error) {
	root, err := msg.RootPtr()
	return CoreAPIReply{root.Struct()}, err
}

func (s CoreAPIReply) String() string {
	str, _ := text.Marshal(0x96feac6656bc08ad, s.Struct)
	return str
}

func (s CoreAPIReply) Id() int64 {
	return int64(s.Struct.Uint64(0))
}

func (s CoreAPIReply) SetId(v int64) {
	s.Struct.SetUint64(0, uint64(v))
}

func (s CoreAPIReply) Accepted() bool {
	return s.Struct.Bit(64)
}

func (s CoreAPIReply) SetAccepted(v bool) {
	s.Struct.SetBit(64, v)
}

func (s CoreAPIReply) Offsets() (capnp.Int64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.Int64List{List: p.List()}, err
}

func (s CoreAPIReply) HasOffsets() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s CoreAPIReply) SetOffsets(v capnp.Int64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewOffsets sets the offsets field to a newly
// allocated capnp.Int64List, preferring placement in s's segment.
func (s CoreAPIReply) NewOffsets(n int32) (capnp.Int64List, error) {
	l, err := capnp.NewInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// CoreAPIReply_List is a list of CoreAPIReply.
type CoreAPIReply_List struct{ capnp.List }

// NewCoreAPIReply creates a new list of CoreAPIReply.
func NewCoreAPIReply_List(s *capnp.Segment, sz int32) (CoreAPIReply_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 16, PointerCount: 1}, sz)
	return CoreAPIReply_List{l}, err
}

func (s CoreAPIReply_List) At(i int) CoreAPIReply { return CoreAPIReply{s.List.Struct(i)} }

func (s CoreAPIReply_List) Set(i int, v CoreAPIReply) error { return s.List.SetStruct(i, v.Struct) }

func (s CoreAPIReply_List) String() string {
	str, _ := text.MarshalList(0x96feac6656bc08ad, s.List)
	return str
}

// CoreAPIReply_Promise is a wrapper for a CoreAPIReply promised by a client call.
type CoreAPIReply_Promise struct{ *capnp.Pipeline }

func (p CoreAPIReply_Promise) Struct() (CoreAPIReply, error) {
	s, err := p.Pipeline.Struct()
	return CoreAPIReply{s}, err
}

// The API message type
type CoreAPIType uint16

// CoreAPIType_TypeID is the unique identifier for the type CoreAPIType.
const CoreAPIType_TypeID = 0xc0644eed4d65921f

// Values of CoreAPIType.
const (
	CoreAPIType_response CoreAPIType = 0
	CoreAPIType_request  CoreAPIType = 1
	CoreAPIType_rollback CoreAPIType = 2
)

// String returns the enum's constant name.
func (c CoreAPIType) String() string {
	switch c {
	case CoreAPIType_response:
		return "response"
	case CoreAPIType_request:
		return "request"
	case CoreAPIType_rollback:
		return "rollback"

	default:
		return ""
	}
}

// CoreAPITypeFromString returns the enum value with a name,
// or the zero value if there's no such value.
func CoreAPITypeFromString(c string) CoreAPIType {
	switch c {
	case "response":
		return CoreAPIType_response
	case "request":
		return CoreAPIType_request
	case "rollback":
		return CoreAPIType_rollback

	default:
		return 0
	}
}

type CoreAPIType_List struct{ capnp.List }

func NewCoreAPIType_List(s *capnp.Segment, sz int32) (CoreAPIType_List, error) {
	l, err := capnp.NewUInt16List(s, sz)
	return CoreAPIType_List{l.List}, err
}

func (l CoreAPIType_List) At(i int) CoreAPIType {
	ul := capnp.UInt16List{List: l.List}
	return CoreAPIType(ul.At(i))
}

func (l CoreAPIType_List) Set(i int, v CoreAPIType) {
	ul := capnp.UInt16List{List: l.List}
	ul.Set(i, uint16(v))
}

const schema_fe982ce7e37aff22 = "x\xda\x8c\xd1\xbdk\x14Q\x14\x05\xf0s\xde\xec8\x16" +
	"a\xd7\xc7\x04\xfc\x00\xd9G*\x0b\x11S\xd8X%\x11" +
	"\xc1,Q\xf7\xc9b\x17a2{\xf7\x03ww\xc6\x99" +
	"Q\x18\x9bT6\x96\x0ab!\xd8h\x13\xfc\xc2NP" +
	"\xb0\xb1\xb3R\xb0\xb0U\xb0\xf2_\xc8\xc8\x8c\x9b\x98\xc0" +
	"\xa2\x96\xf7q\x98;\xbf{\x0e}^R\x8bn\x83\x80" +
	"\x9ds\x0f\x14\xcf\x0f\xbe\xbd\xda{\xb6\xfd\x00\xb6NU" +
	",\x14\xb7\xbf\xfd8\xf9p\x1b.=@\x8f\xbf\xea\xdc" +
	"\xd3yS\xbfy\x09\x16\xdf\xcf||\xf2\xe2\xd5\xe1G" +
	"\xb3\xa2\xbe\xf0\xb5?\xa6\xe7\x8f\xd9\xf4\x9f\xb2\x8c7\xef" +
	"\xc9\xc5\x9f\x97\xba\xef\xa1\xeb{\xd2\xa0o\xd5'\x7f]" +
	"y\xfe\xbaj\xfaw\xd4e\xb0\x08\xa3D\x96\xdb\xab\xa7" +
	"T\x18\xc4\x93\xf8\xec\xb9\xdf\xe3\x15\x89\x9dQ\xde&m" +
	"\x8d\xaa\xb8v\xff\xb1}\xf7\xe5\xee\x07\xd8\x9a\xe2\xf2i" +
	"r\x0eX\xe4\x82*:\x031cIS/\xe8\x8bI" +
	"e\x92\x99^\x12\x8dM\xf9M\x93Jrk\x18\x8aI" +
	"$\x1e\xe5\xc3I\xdf\x04&\x91\x1b7%\xcdL\x94\x94" +
	"C4\x1amxAx\xbd\xbc\x86S\x03j\x04\xf4\xf9" +
	"c\x80]rh\xd7\x145\x97\xe6Y>\xae\xb6\x00{" +
	"\xc1\xa1\xed(R\xcdS\x01\xda\xae\x00v\xcd\xa1\x1d(" +
	":\xc3.](\xba`\x11\x84\xa1\xc4\x99t\x01\x90P" +
	"$\xb8\x19\xf5z\xa9d)\xeb`\xdba\x15\xad\xef\xa1" +
	"s\x87\xde\xac\xe6\xd9\xea\x13S\xf5\x16w\xd5\xee~u" +
	"\x94\x0d$\xd9a\xa7&\x8bv\xef\xd0(_\xfe\xc2\xac" +
	"M\x99\x1b\xff\xcf,\xf7\x07}\xe9\xc0\xcbca\xe3O" +
	"\xe3 \x1b\xff&\xefo\xbb\x93\xc7\x94\xd9\xec#\x15[" +
	"s\xabR/\xb7W\x0d\xa7\xabM#\xcb\xe3JU\xfd" +
	"\xe8\xf1V\xb9Z\x1f]\x01\xa8\xb4n\x01E\"i\x1c" +
	"MR\x01\xb09\xad\xbe\xa8Z\xafJ\xc7\xaf\x00\x00\x00" +
	"\xff\xff#\xfd\xce\x1c"

func init() {
	schemas.Register(schema_fe982ce7e37aff22,
		0x96feac6656bc08ad,
		0x9c17b0aea4cc35e4,
		0xc0644eed4d65921f)
}
