// Code generated by capnpc-go. DO NOT EDIT.

package pangine

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// The message sent to a stage service (including rt)
type StageAPI struct{ capnp.Struct }

// StageAPI_TypeID is the unique identifier for the type StageAPI.
const StageAPI_TypeID = 0xcc401bdb9c922254

func NewStageAPI(s *capnp.Segment) (StageAPI, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return StageAPI{st}, err
}

func NewRootStageAPI(s *capnp.Segment) (StageAPI, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1})
	return StageAPI{st}, err
}

func ReadRootStageAPI(msg *capnp.Message) (StageAPI, error) {
	root, err := msg.RootPtr()
	return StageAPI{root.Struct()}, err
}

func (s StageAPI) String() string {
	str, _ := text.Marshal(0xcc401bdb9c922254, s.Struct)
	return str
}

func (s StageAPI) Terminate() bool {
	return s.Struct.Bit(0)
}

func (s StageAPI) SetTerminate(v bool) {
	s.Struct.SetBit(0, v)
}

func (s StageAPI) Id() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s StageAPI) SetId(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s StageAPI) Offsets() (capnp.Int64List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.Int64List{List: p.List()}, err
}

func (s StageAPI) HasOffsets() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StageAPI) SetOffsets(v capnp.Int64List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewOffsets sets the offsets field to a newly
// allocated capnp.Int64List, preferring placement in s's segment.
func (s StageAPI) NewOffsets(n int32) (capnp.Int64List, error) {
	l, err := capnp.NewInt64List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.Int64List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s StageAPI) Rollbacked() bool {
	return s.Struct.Bit(1)
}

func (s StageAPI) SetRollbacked(v bool) {
	s.Struct.SetBit(1, v)
}

func (s StageAPI) RollbackedToId() int64 {
	return int64(s.Struct.Uint64(16))
}

func (s StageAPI) SetRollbackedToId(v int64) {
	s.Struct.SetUint64(16, uint64(v))
}

// StageAPI_List is a list of StageAPI.
type StageAPI_List struct{ capnp.List }

// NewStageAPI creates a new list of StageAPI.
func NewStageAPI_List(s *capnp.Segment, sz int32) (StageAPI_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 24, PointerCount: 1}, sz)
	return StageAPI_List{l}, err
}

func (s StageAPI_List) At(i int) StageAPI { return StageAPI{s.List.Struct(i)} }

func (s StageAPI_List) Set(i int, v StageAPI) error { return s.List.SetStruct(i, v.Struct) }

func (s StageAPI_List) String() string {
	str, _ := text.MarshalList(0xcc401bdb9c922254, s.List)
	return str
}

// StageAPI_Promise is a wrapper for a StageAPI promised by a client call.
type StageAPI_Promise struct{ *capnp.Pipeline }

func (p StageAPI_Promise) Struct() (StageAPI, error) {
	s, err := p.Pipeline.Struct()
	return StageAPI{s}, err
}

const schema_965502164927c095 = "x\xdaD\xcc\xbfk\x13a\x1c\xc7\xf1\xcf\xe7y\xee\xcc" +
	"\"\xd1\x07N\x07%\xe4\xc1\xc5\xb8\x08Y]L\xdc\xb2" +
	"\xe5\xab\xc9\xe2\xa0\x9cwO\xe2ar\x17\xee.\x0e\xa2" +
	"\xe8\xa0`K\xa7\x96v()\xed\xd0B\xc7\xfe\x03\x85" +
	"R\xe8\xd6\xb9K\xff\x98+\x0d\xfd1~^\xf0y?" +
	"\x9ew\x94\xf1?\x03\xe2\xf9\x0f\xaa\xc1\x8b\xf5\xc5\xe5\xf3" +
	"\xce9\xe4\x11u\xb5y\xf2\xb2\xf7T\x0d\xb7\xe0\xb3\x06" +
	"\x98'\xa7\xa6Q3\x8df{\xd8$X\x15e8v" +
	"\xdd~O\xbd\x8e\xc2Y:{\xf3\xe1f\xa3O\x8aG" +
	"U}\xda\xd8\x95\xe3\x8b\xd53\x88\xa7\xd8m\x91\x0f\x81" +
	"6\xb7Y\x0d\xbe:;uE\xe1\x87cg\x0b\x97\x96" +
	"\xb6\xcclh\x97A[\xb8\xfc{\x129\xdbJ\xd2h" +
	"2\x8f\x93tls]\xbe\x02$\xd0\x1e\xe0\x110\xbf" +
	"\xde\x03\xf2SS\xfe+\x1a2\xe05\xfe{\x06\xc8\x1f" +
	"MYS\xa4\x0a\xa8\x00\xb3\xf2\x0e\x90\xbf\x9a\xb2\xa7h" +
	"4\x03j\xc0\xec|\x04d\xa1)\x87\x8a\xc6S\x01=" +
	"\xc0\x1c\xfc\x00d_S\x8e\x14\xab\xd2\xe5\xd3$\x0dK" +
	"\xd0\x91P$\xa8\x93\x98>\x14}\xf0w6\x1a\x15\xae" +
	",X\x07\xfb\x9aK\xae\x83U\x9eM&_\xc2\xe8\x1b" +
	"\xb4\x8boo\xf7\xf8\xd6\xc5\x83\xacw\x17\xb9\x0a\x00\x00" +
	"\xff\xff\x92\xe1U,"

func init() {
	schemas.Register(schema_965502164927c095,
		0xcc401bdb9c922254)
}
