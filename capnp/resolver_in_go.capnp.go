// Code generated by capnpc-go. DO NOT EDIT.

package pangine

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

// output of cpp llvm resolver
type ResolverIn struct{ capnp.Struct }

// ResolverIn_TypeID is the unique identifier for the type ResolverIn.
const ResolverIn_TypeID = 0xed782e0a1896bce3

func NewResolverIn(s *capnp.Segment) (ResolverIn, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ResolverIn{st}, err
}

func NewRootResolverIn(s *capnp.Segment) (ResolverIn, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return ResolverIn{st}, err
}

func ReadRootResolverIn(msg *capnp.Message) (ResolverIn, error) {
	root, err := msg.RootPtr()
	return ResolverIn{root.Struct()}, err
}

func (s ResolverIn) String() string {
	str, _ := text.Marshal(0xed782e0a1896bce3, s.Struct)
	return str
}

func (s ResolverIn) Terminate() bool {
	return s.Struct.Bit(0)
}

func (s ResolverIn) SetTerminate(v bool) {
	s.Struct.SetBit(0, v)
}

func (s ResolverIn) Bytes() (capnp.UInt8List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp.UInt8List{List: p.List()}, err
}

func (s ResolverIn) HasBytes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ResolverIn) SetBytes(v capnp.UInt8List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewBytes sets the bytes field to a newly
// allocated capnp.UInt8List, preferring placement in s's segment.
func (s ResolverIn) NewBytes(n int32) (capnp.UInt8List, error) {
	l, err := capnp.NewUInt8List(s.Struct.Segment(), n)
	if err != nil {
		return capnp.UInt8List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// ResolverIn_List is a list of ResolverIn.
type ResolverIn_List struct{ capnp.List }

// NewResolverIn creates a new list of ResolverIn.
func NewResolverIn_List(s *capnp.Segment, sz int32) (ResolverIn_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return ResolverIn_List{l}, err
}

func (s ResolverIn_List) At(i int) ResolverIn { return ResolverIn{s.List.Struct(i)} }

func (s ResolverIn_List) Set(i int, v ResolverIn) error { return s.List.SetStruct(i, v.Struct) }

func (s ResolverIn_List) String() string {
	str, _ := text.MarshalList(0xed782e0a1896bce3, s.List)
	return str
}

// ResolverIn_Promise is a wrapper for a ResolverIn promised by a client call.
type ResolverIn_Promise struct{ *capnp.Pipeline }

func (p ResolverIn_Promise) Struct() (ResolverIn, error) {
	s, err := p.Pipeline.Struct()
	return ResolverIn{s}, err
}

const schema_eb0269f5b51f88bd = "x\xda,\xcc\xb1J\xc3P\x18\x86\xe1\xef\xfb\x934\"" +
	"\"\x1e\xb0\xe0 $\xdd\x14\xa4PqrRp\xd0A" +
	"\xe8\xdf\x0b0\xd4r\x94@\x9a\x84\xf44\xea\x1d\x88\xab" +
	"\xe0\xeaU\xb8\xd9\xd1[\xf0\x02t\x14G\xe7#\x15\xb7" +
	"\x97gx7N\x8e\xc4D\x19\xa0a\xd4\xf1\x9f\xafO" +
	"[\xab\xfd\xdboh\x97\xf4\x8b\xfb\xe4\xe5'\x97/D" +
	"\x8c\x81AWhz\xb1\xe9%\xe6\xfc\x06\xf4\x8d\x9dU" +
	"Ek\x9b \xcb\xcb\xec\xba\xeaO\xc6uY\x1f\x8e\xfe" +
	"\xf5\xac\xc4\x90\xd4\x90\xe2/\x1e\x9fu\xf1\xfe\xf0\x06\x0d" +
	"\x85\xc7\xdb\xe4\x1a`\xf8\xe1\xab\xb9\xab\xe7.\xad\xe4*" +
	"\x9d\xd4uZ\x14\xed4\xfd\x9b\xc6\xadm\x00]\x09B" +
	" $`vG\x80\xee\x04\xd4\x03!\xb9\xc9\xa5\x0d\xf6" +
	"\x01\xdd\x0b\xa8\xa7B\xefl3\xcd\xcb\xb1\x03-\x09!" +
	"\xc1\xe4\xf2\xce\xd9\x19\xd7\xc1a@v \xcb\xfc\x0d\x00" +
	"\x00\xff\xff\xc3\x0e:\x0b"

func init() {
	schemas.Register(schema_eb0269f5b51f88bd,
		0xed782e0a1896bce3)
}
